import { Shape } from '../classes/shape';
import { ImportedElement, ShapeTargetType, Target } from '../types/types';
import { IImage } from '../interfaces/iimage';
import { RootPresTemplate } from '../interfaces/root-pres-template';
import IArchive from '../interfaces/iarchive';
export declare class Image extends Shape implements IImage {
    extension: string;
    constructor(shape: ImportedElement, targetType: ShapeTargetType);
    modify(targetTemplate: RootPresTemplate, targetSlideNumber: number): Promise<Image>;
    modifyOnAddedSlide(targetTemplate: RootPresTemplate, targetSlideNumber: number): Promise<Image>;
    append(targetTemplate: RootPresTemplate, targetSlideNumber: number): Promise<Image>;
    remove(targetTemplate: RootPresTemplate, targetSlideNumber: number): Promise<Image>;
    prepare(targetTemplate: RootPresTemplate, targetSlideNumber: number): Promise<void>;
    copyFiles(): Promise<void>;
    appendTypes(): Promise<void>;
    /**
     * ToDo: This will always append a new relation, and never replace an
     * existing relation. At the end of creation process, unused relations will
     * remain existing in the .xml.rels file. PowerPoint will not complain, but
     * integrity checks will not be valid by this.
     */
    appendToSlideRels(): Promise<void>;
    hasSvgRelation(): boolean;
    static getAllOnSlide(archive: IArchive, relsPath: string): Promise<Target[]>;
}
